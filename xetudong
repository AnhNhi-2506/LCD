#include <Servo.h>
Servo s1;
int enA = 5;
int in1 = 2;
int in2 = 4;
int enB = 6;
int in3 = 7;
int in4 = 8;
int echo = 13;
int trig = 12;
int time;
int distance ;
int Right_Value = 100;
int Left_Value = 100;
void setup() {
Serial.begin(9600);
// s1.attach(11);
pinMode (12,OUTPUT);
pinMode (13,INPUT);
pinMode (enA,OUTPUT);
pinMode (in1,OUTPUT);
pinMode (in2,OUTPUT);
pinMode (enB,OUTPUT);
pinMode (in3,OUTPUT);
pinMode (in4,OUTPUT);
pinMode (Right_Value,INPUT);
pinMode (Left_Value ,INPUT);
}
void loop() {
//for (int i=90; i<= 180; i+=1){
//  s1.write(i);
//delay (15);
//}
//for (int i=180; i>= 0; i-=1){
//s1.write(i);
//delay(15);
//}
//for (int i=0; i<= 90; i+=1){
// s1.write(i);
//delay (15);
//}
digitalWrite(trig,LOW);
delayMicroseconds(2);
digitalWrite(trig,HIGH);
delayMicroseconds(10);
digitalWrite(trig,LOW);
time = pulseIn (echo,HIGH);
distance= time*0.034/ 2;
Serial.print("distance = ");
Serial.println(distance);
delay (10);
Serial.print("RIGHT");
Serial.println(Right_Value);
Serial.print("LEFT");
Serial.println(Left_Value);
if ((distance >= 15)&& (distance <= 50)){
// forwad
digitalWrite(in1,LOW);
digitalWrite(in2,HIGH);
digitalWrite(in3,LOW);
digitalWrite(in4,HIGH);
digitalWrite(enA,100);
digitalWrite(enB,100);
delay(100);
}
//else if((Right_Value==1) && (Left_Value==1)) {
else if ((distance > 5)&& (distance < 50)){
//backward
digitalWrite(in1,HIGH);
digitalWrite(in2,LOW);
digitalWrite(in3,HIGH);
digitalWrite(in4,LOW);
digitalWrite(enA,100);
digitalWrite(enB,100);
delay(100);
}
else if((Right_Value==1)&&(Left_Value==0)) {
//turnRight
digitalWrite(in1,HIGH);
digitalWrite(in2,LOW);
digitalWrite(in3,LOW);
digitalWrite(in4,HIGH);
digitalWrite(enA,100);
digitalWrite(enB,100);
delay(100);
}
else if((Right_Value==0) && (Left_Value==1)) {
//turnLeft
digitalWrite(in1,LOW);
digitalWrite(in2,HIGH);
digitalWrite(in3,HIGH);
digitalWrite(in4,LOW);
digitalWrite(enA,100);
digitalWrite(enB,100);
delay(100);
}
else (distance >5 ); {
//stop
digitalWrite(in1,LOW);
digitalWrite(in2,LOW);
digitalWrite(in3,LOW);
digitalWrite(in4,LOW);
digitalWrite(enA,0);
digitalWrite(enB,0);
delay(10);
}
}
ito po coding namin (2)
//Arduino Human Following Robot
//include the library code:
#include<NewPing.h>
#include<Servo.h>
#include<AFMotor.h>
#define RIGHT A2              // Right IR sensor connected to analog pin A2 of Arduino Uno:
#define LEFT A3               // Left IR sensor connected to analog pin A3 of Arduino Uno:
#define TRIGGER_PIN 12     // Trigger pin connected to analog pin A1 of Arduino Uno:
#define ECHO_PIN 13      // Echo pin connected to analog pin A0 of Arduino Uno:
#define MAX_DISTANCE 200      // Maximum ping distance:
unsigned int distance = 100;    //Variable to store ultrasonic sensor distance:
unsigned int Right_Value = 90; //Variable to store Right IR sensor value:
unsigned int Left_Value = 90;  //Variable to store Left IR sensor value:
NewPing sonar(TRIGGER_PIN, ECHO_PIN, MAX_DISTANCE);  //NewPing setup of pins and maximum distance:
//create motor objects
AF_DCMotor Motor1(2,MOTOR12_1KHZ);
AF_DCMotor Motor2(4,MOTOR12_1KHZ);
AF_DCMotor Motor3(3,MOTOR34_1KHZ);
AF_DCMotor Motor4(4,MOTOR34_1KHZ);
Servo myservo; //create servo object to control the servo:
int pos=190;     //variable to store the servo position:
void setup() { // the setup function runs only once when power on the board or reset the board:
Serial.begin(9600); //initailize serial communication at 9600 bits per second:
myservo.attach(10); // servo attached to pin 10 of Arduino UNO
{
for(pos = 90; pos <= 180; pos += 1){    // goes from 90 degrees to 180 degrees:
myservo.write(pos);                   //tell servo to move according to the value of 'pos' variable:
delay(15);                            //wait 15ms for the servo to reach the position:
}
for(pos = 180; pos >= 0; pos-= 1) {     // goes from 180 degrees to 0 degrees:
myservo.write(pos);                   //tell servo to move according to the value of 'pos' variable:
delay(15);                            //wait 15ms for the servo to reach the position:
}
for(pos = 0; pos<=90; pos += 1) {       //goes from 180 degrees to 0 degrees:
myservo.write(pos);                   //tell servo to move according to the value of 'pos' variable:
delay(15);                            //wait 15ms for the servo to reach the position:
}
}
pinMode(RIGHT, INPUT); //set analog pin RIGHT as an input:
pinMode(LEFT, INPUT);  //set analog pin RIGHT as an input:
pinMode(TRIGGER_PIN, OUTPUT);
pinMode( ECHO_PIN , INPUT);
}
// the lope function runs forever
void loop() {
delay(50);                                        //wait 50ms between pings:
distance = sonar.ping_cm();                       //send ping, get distance in cm and store it in 'distance' variable:
Serial.print("distance");
Serial.println(distance);                         // print the distance in serial monitor:
Right_Value = digitalRead(RIGHT);             // read the value from Right IR sensor:
Left_Value = digitalRead(LEFT);               // read the value from Left IR sensor:
Serial.print("RIGHT");
Serial.println(Right_Value);                      // print the right IR sensor value in serial monitor:
Serial.print("LEFT");
Serial.println(Left_Value);                       //print the left IR sensor value in serial monitor:
if((distance > 1) && (distance < 15)){            //check wheather the ultrasonic sensor's value stays between 1 to 15.
//If the condition is 'true' then the statement below will execute:
//Move Forward:
Motor1.setSpeed(130);  //define motor1 speed:
Motor1.run(FORWARD);   //rotate motor1 clockwise:
Motor2.setSpeed(130);  //define motor2 speed:
Motor2.run(FORWARD);   //rotate motor2 clockwise:
Motor3.setSpeed(130);  //define motor3 speed:
Motor3.run(FORWARD);   //rotate motor3 clockwise:
Motor4.setSpeed(130);  //define motor4 speed:
Motor4.run(FORWARD);   //rotate motor4 clockwise:
}else if((Right_Value==0) && (Left_Value==1)) {   //If the condition is 'true' then the statement below will execute:
//Turn Left
Motor1.setSpeed(150);  //define motor1 speed:
Motor1.run(FORWARD);   //rotate motor1 cloclwise:
Motor2.setSpeed(150);  //define motor2 speed:
Motor2.run(FORWARD);   //rotate motor2 clockwise:
Motor3.setSpeed(150);  //define motor3 speed:
Motor3.run(BACKWARD);  //rotate motor3 anticlockwise:
Motor4.setSpeed(150);  //define motor4 speed:
Motor4.run(BACKWARD);  //rotate motor4 anticlockwise:
delay(150);
}else if((Right_Value==1)&&(Left_Value==0)) {     //If the condition is 'true' then the statement below will execute:
//Turn Right
Motor1.setSpeed(150);  //define motor1 speed:
Motor1.run(BACKWARD);  //rotate motor1 anticlockwise:
Motor2.setSpeed(150);  //define motor2 speed:
Motor2.run(BACKWARD);  //rotate motor2 anticlockwise:
Motor3.setSpeed(150);  //define motor3 speed:
Motor3.run(FORWARD);   //rotate motor3 clockwise:
Motor4.setSpeed(150);  //define motor4 speed:
Motor4.run(FORWARD);   //rotate motor4 clockwise:
delay(150);
}else if(distance > 15) {                          //If the condition is 'true' then the statement below will execute:
//Stop
Motor1.setSpeed(0);    //define motor1 speed:
Motor1.run(RELEASE);   //stop motor1:
Motor2.setSpeed(0);    //define motor2 speed:
Motor2.run(RELEASE);   //stop motor2:
Motor3.setSpeed(0);    //define motor3 speed:
Motor3.run(RELEASE);   //stop motor3:
Motor4.setSpeed(0);    //define motor4 speed:
Motor4.run(RELEASE);   //stop motor4:
}
}
